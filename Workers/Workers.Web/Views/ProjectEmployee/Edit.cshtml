@model Workers.Web.Infrastructure.Models.ProjectEmployee

@{
    ViewData["Title"] = "Edit";

    List<Workers.Web.Infrastructure.Models.Position> positions = ViewBag.Positions as List<Workers.Web.Infrastructure.Models.Position>;
    List<Workers.Web.Infrastructure.Models.Project> projects = ViewBag.Projects as List<Workers.Web.Infrastructure.Models.Project>;

}

<h1>Edit</h1>

<h4>ProjectEmployee</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditProjEmp">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Id" class="form-control" type="hidden" />
            </div>
            <div class="form-group">
                <label asp-for="Employee.LastName" class="control-label"></label>
                <input asp-for="Employee.LastName" class="form-control" disabled="disabled" />
                <span asp-validation-for="Employee.LastName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ProjectId" class="control-label">ProjectName</label>
                <select asp-for="ProjectId" class="form-control"
                        asp-items="@(new SelectList(ViewBag.Projects, "Id", "Name"))"></select>
            </div>

            <div class="form-group">
                <label asp-for="PositionId" class="control-label">PositionName</label>
                <select asp-for="PositionId" class="form-control"
                        asp-items="@(new SelectList(ViewBag.Positions, "Id", "Name"))"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="GetAll">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
